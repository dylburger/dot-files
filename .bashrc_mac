# Pull files from learning repo on Ubuntu box
alias pull-dyl='git pull 192.168.1.10:~/docs/learning HEAD'

PATH=${PATH}:~/scripts:/Applications/MAMP/Library/bin/:~/bin:~/bin/ImageMagick-6.7.3/bin:~/bin/mongodb-osx-x86_64-2.0.2/bin:/Users/dylan/Desktop/personal/ec2/ec2-api-tools-1.4.4.1/bin:${HOME}/scripts:/Applications/Octave.app/Contents/Resources/bin:/Applications/Gnuplot.app/Contents/Resources/bin:${HOME}/bin/scala/bin:${HOME}/tree/spark
PYTHONPATH=${PYTHONPATH}:~/Desktop/brightRoll/scripts/google

# Mount website files in local directory
# sshfs dylansat@dylansather.info:public_html ~/Desktop/personal/website

# Load RVM
[[ -s ${HOME}/.rvm/bin/rvm ]] && . ${HOME}/.rvm/bin/rvm > /dev/null 2>&1

alias wireshark='/Applications/Wireshark.app/Contents/MacOS/Wireshark'
alias mysql_start='sudo /opt/local/etc/LaunchDaemons/org.macports.mysql5/mysql5.wrapper start'
alias mysql_stop='sudo /opt/local/etc/LaunchDaemons/org.macports.mysql5/mysql5.wrapper stop'
alias mysql_restart='sudo /opt/local/etc/LaunchDaemons/org.macports.mysql5/mysql5.wrapper restart'

# stderred shell variables
export DYLD_INSERT_LIBRARIES=/Users/dylan/tree/stderred/lib/stderred.dylib DYLD_FORCE_FLAT_NAMESPACE=1

# ImageMagick uses the env variable for something...
export MAGICK_HOME="$HOME/bin/ImageMagick-6.7.4"

# ssh-agent stuff...
which -s ssh-agent
if [ $? -eq 0 ]; then

  SSH_ENV="$HOME/.ssh/environment"

  # Start ssh-agent
  function start_agent {
    echo "Initializing new SSH agent..."
    ssh-agent | sed 's/^echo/#echo/' > "$SSH_ENV"
    echo succeeded
    chmod 600 "$SSH_ENV"
    . "$SSH_ENV" > /dev/null
    ssh-add
  }

  # test for identities
  function test_identities {
    # test whether our standard ids have been added to the agent
    ssh-add -l | grep "The agent has no identities" > /dev/null
    if [ $? -eq 0 ]; then
      ssh-add
      # $SSH_AUTH_SOCK is broken, start new agent
      if [ $? -eq 2 ]; then
	start_agent
      fi
    fi
  }

  # Check for running ssh-agent with proper $SSH_AGENT_PID
  if [ -n "$SSH_AGENT_PID" ]; then
    ps -ewww | grep "$SSH_AGENT_PID" | grep ssh-agent > /dev/null
    if [ $? -eq 0 ]; then
      test_identities
    fi
  # Otherwise, we might be able to load a PID from $SSH_ENV
  else
    if [ -f "$SSH_ENV" ]; then
      . "$SSH_ENV" > /dev/null
    fi
    ps -ewww | grep "$SSH_AGENT_PID" | grep ssh-agent > /dev/null
    if [ $? -eq 0 ]; then
      test_identities
    else
      start_agent
    fi
  fi
fi

# Same with gpg-agent
which -s gpg-agent
if [ $? -eq 0 ]; then
  if test -f $HOME/.gpg-agent-info && kill -0 `cut -d: -f 2 $HOME/.gpg-agent-info` 2>/dev/null; then
    GPG_AGENT_INFO=`cat $HOME/.gpg-agent-info`
    SSH_AUTH_SOCK=`cat $HOME/.ssh-auth-sock`
    SSH_AGENT_PID=`cat $HOME/.ssh-agent-pid`
    export GPG_AGENT_INFO SSH_AUTH_SOCK SSH_AGENT_PID
  else
    eval `gpg-agent --daemon`
    echo $GPG_AGENT_INFO >$HOME/.gpg-agent-info
    echo $SSH_AUTH_SOCK > $HOME/.ssh-auth-sock
    echo $SSH_AGENT_PID > $HOME/.ssh-agent-pid
  fi
fi
